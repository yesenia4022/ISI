function Gplotdirmap(mag,ang)

global fh
%mag = log(mag)
mag = mag-min(mag(:));
mag = mag/max(mag(:));

dim = size(ang);
set(gcf,'Color',[1 1 1]);

if anatflag
    
    [imanat] = getExptMean([1 0 0],2);
    imanat = imanat{1};
    
    mi = prctile(imanat(:),1);    
    imanat = phi(imanat-mi);
    ma = prctile(imanat(:),99);
    imanat = imanat/ma;

    imfunc = ang;
    imfunc = imfunc/360;
    imfunc = round(imfunc*63+1);
    %imanat = round(imanat*63+1);

    hsvid = hsv;
    imout = zeros(dim(1),dim(2),3);
    for i = 1:dim(1)
        for j = 1:dim(2)
            imout(i,j,:) = mag(i,j)*hsvid(imfunc(i,j),:);
        end
    end
    
    imanat(:,:,2) = imanat;
    imanat(:,:,3) = imanat(:,:,1);
    
    imout = imout+sqrt(imanat);

    imout = imout/max(imout(:));
    
    x = image(imout,'CDataMapping','direct','AlphaDataMapping','none');

else
    imfunc = ang;
    imfunc = imfunc/360;
    imfunc = round(imfunc*63+1);
    x = image(1:length(ang(1,:)),1:length(ang(:,1)),imfunc,'CDataMapping','direct','AlphaData',mag,'AlphaDataMapping','none');
    colormap hsv
    
end





set(gcf,'Color',[1 1 1]);
x = image(1:length(ang(1,:)),1:length(ang(:,1)),ang*64/360,'CDataMapping','direct','AlphaData',mag,'AlphaDataMapping','none');

axis image;
colormap hsv;

fh = gcf;
colorbar('YTick',[1 16:16:64],'YTickLabel',{'0','90','180','270','360'})

datacursormode on;
dcm_obj = datacursormode(fh);
set(dcm_obj,'DisplayStyle','window','SnapToDataVertex','on','UpdateFcn',@myupdatefcn);


function txt = myupdatefcn(empt,event_obj)

%Matlab doesn't like it when I try to input other things into myupdatefcn,
%this is why I have these globals
 
global ACQinfo Tens Tens_var Flim TCWin Fsymbol oppCollapse

W = TCWin;

varflag = 0;
if ~isempty(Tens_var)
    varflag = 1;
end
    
tdom = 0:length(Tens{1}(1,1,:))-1;
tdom = tdom*ACQinfo.msPerLine/1000*ACQinfo.linesPerFrame;
if isfield(ACQinfo,'stimPredelay')
    predelay = ACQinfo.stimPredelay;
    trialtime = ACQinfo.stimTrialtime;    
    tdom = tdom-predelay;
end

nr = pepgetnorepeats;

SEn = sqrt(length(Flim(1):Flim(2))*nr);  %standard error normalizer for tuning curve
%  
pos = round(get(event_obj,'Position')); %pos(1) is column dimension

%%%
[tc tcourseHi tcourseLo axisdom blank legStr] = getpixeldata(pos,W);  %This does the work
%%%


tau = pos(2)*ACQinfo.msPerLine/1000;  
tdom = tdom + tau;

subplot(2,1,1)
if ~isempty(blank)
    plot([axisdom(1) axisdom(end)],[blank blank],'k'), hold on
else 
    %Even if no blank was shown we put a line at zero. 
    plot([axisdom(1) axisdom(end)],[0 0],'k'), hold on  
end

if ~varflag
    plot(axisdom,tc,'-o'), hold off
    legend(legStr)
else
    errorbar(axisdom,tc(id),sqrt(tc_var(id))/SEn,'b'), hold off
end
xlabel(Fsymbol)


%Get 'orientation selectivity index' and put into the title
if ~isempty(blank)
    tc = tc-blank;
end


if oppCollapse == 3
    [y x] = find(tc == max(tc(:)));
    tcdum = tc(:,x);
else
    tcdum = tc;
end

TCSel = abs(sum(tcdum'.*exp(1i*axisdom*pi/180)));
TCSel = TCSel/sum(tcdum);
TCSel =  round(TCSel*100)/100;
title(['DSI = ' num2str(TCSel)])


Fi = 2;

subplot(2,1,2)
if varflag
    dum_var = squeeze(sum(sum(Tens_var{idma}(yran,xran,:),1),2))/nopix/nr;
    errorbar(tdom(1:end-Fi),tcourseHi(1:end-Fi),sqrt(dum_var(1:end-Fi))), hold on 
else
    plot(tdom(1:end-Fi),tcourseHi(1:end-Fi),'-o'), hold on
end

if varflag
    dum_var = squeeze(sum(sum(Tens_var{idmi}(yran,xran,:),1),2))/nopix/nr;
    errorbar(tdom(1:end-Fi),tcourseLo(1:end-Fi),sqrt(dum_var(1:end-Fi)),'r')
else
    plot(tdom(1:end-Fi),tcourseLo(1:end-Fi),'-or')
end

if isfield(ACQinfo,'stimPredelay')
    ylimits = get(gca,'Ylim');
    plot([0 trialtime],[ylimits(1) ylimits(1)]+(ylimits(2)-ylimits(1))/10,'k')
end
hold off
xlabel('sec')



tar = get(get(event_obj,'Target'));
data = tar.CData;

txt = {['X: ',num2str(pos(1))],...
       ['Y: ',num2str(pos(2))],...
       ['Dir: ' sprintf('%2.1f %%',data(round(pos(2)),round(pos(1)))/64*360) ' deg']};
       
       