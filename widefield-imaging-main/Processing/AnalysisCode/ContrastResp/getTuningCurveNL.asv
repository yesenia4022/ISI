function getTuningCurveNL

%kernPop can be obtained from 'GetCellKernels'

global f0m bwCell1

kernPop = GetCellKernels(f0m,bwCell1);

dim = size(kernPop);

dori = 360/dim(2);
oridom = (0:dim(2)-1)*dori;

orthD = round(90/dori)+1; %index of baseline

k = 1;
for i = 1:dim(3)   %loop through each cell

    kern = kernPop(:,:,i);

    if max(kern(:)) > .1

        tcdum = mean(kern(end-1:end,:));  %Take the 2 highest contrasts to get the tuning curve 'shape'
        %tcdum = kern(end,:);
        idma = find(tcdum == max(tcdum));
        kern = circshift(kern,[0 round(dim(2)/2)-idma]);
        idma = round(dim(2)/2);

        for c = 1:dim(1)
            base = (kern(c,idma-orthD+1) + kern(c,idma+orthD-1))/2;

            %kern(c,:) = kern(c,:) - base;  %Subtract response to orthogonal oris
            %kern(c,:) = kern(c,:)/kern(c,idma); %Normalize the amplitude
            %kern(c,:) = kern(c,:)/norm(kern(c,:));

        end
        

        %kernPopmod(:,:,k) = kern(:,idma-orthD+1:idma+orthD-1);
        kernPopmod(:,:,k) = (kern/norm(kern(:)));
        %kernPopmod(:,:,k) = kern;

        k = k+1;

    end

end

dum1 = squeeze(kernPopmod(2,:,:));
dum2 = squeeze(kernPopmod(3,:,:));



[param] = FtoSpike(dum1(:),dum2(:))

figure,plot(dum1(:),dum2(:),'.')


%%%
%%%
beta = param(1);
gam = param(2);
A = param(3);
K = param(4);

F2 = 0:.0001:K;


%F1 = K./(1+exp(-beta*A*gam - A*log(K./F2-1)-gam));

s2 = gam - 1./beta * log(K./F2 - 1);
s1 = A*s2;
F1 = K./(1+exp(-beta*(s1-gam)));

figure,
subplot(2,2,3)
plot(dum1(:),dum2(:),'.'), xlim([0 K]), ylim([0 K])
hold on
plot(F2,F1,'k', 'lineWidth',2)
xlabel('Ca2++ Fluorescence (low contrast)'), ylabel('Ca2++ Fluorescence (high contrast)')
subplot(2,2,4)
plot(s1,F1,'k', 'lineWidth',2)
xlabel('SpikeRate (high contrast)'), lim(min())
subplot(2,2,1)
plot(F2,s2,'k', 'lineWidth',2)
ylabel('SpikeRate (low contrast)')
subplot(2,2,2)
plot(s1,s2,'k', 'lineWidth',2)
