function [imZ im] = Znormalize(msize,mmorph,varargin)

global ACQinfo G_handles

%%%Estimate cell diameter in pixels%%%

%constants
micpercell = 15; %approximate cell diameter in microns
micpervolt = 350/2.5; %depends on objective

micW = micpervolt*ACQinfo.scanAmplitudeX/ACQinfo.zoomFactor;  %FOV micron width 
micperpixel = micW/ACQinfo.pixelsPerLine; %microns per pixel
 

cellD = micperpixel/micpercell;  %Approximate diameter of a cell in pixels
cellD = cellD*3;

%%%%%%%%%%%%%%%%%%%%%%%%%%%

if isempty(varargin)
    im = GetTrialData_mat([1 1 0 0],1);
    if get(G_handles.fastMotionFlag,'value')
        [Px_fast Py_fast] = getTrialMotion3(im{2});
        for i = 1:2
            im{i} = makeGeoTrx(im{i},Px_fast,Py_fast);
        end
    end
    
    for i = 1:2       
        if get(G_handles.fastMotionFlag,'value')
            [Px_fast Py_fast] = getTrialMotion3(im{i});
            im{i} = makeGeoTrx(im{i},Px_fast,Py_fast);
        end
        im{i} = mean(im{i}(:,:,2:end-1),3);
        
    end
else
    im{1} = varargin{1};
    im{2} = varargin{1};
end

for i = 1:2
    
    if i == 1
        figure, imagesc(im{i}), colormap gray
    end
    
    deb = 0;
    if deb
        %CH{i} = deconvblind(CH{i}, hanning(deb)*hanning(deb)');
        im{i} = deconvblind(im{i}, ones(deb,deb));
    end
    
    %local Z and make binary with threshold
    imZ{i} = LocalZ(im{i},round(msize));  
    
    if i == 1
        figure, imagesc(imZ{i}), colormap gray
    end
        
    %It is helpful to interpolate prior to the thesholding and
    %morphological opening.  Image is later downsampled by the same amount.
    dim = size(imZ{i});
    if mmorph ~= 0
        D = 1/(mmorph+1);
        imZ{i} = interp2(imZ{i},1:D:dim(2),(1:D:dim(1))');
    end
    
end



